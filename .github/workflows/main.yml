name: Docker

on:
  schedule:
    - cron: '17 3 * * *'
  workflow_call: {}
  workflow_dispatch:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: salsadigitalauorg/internal-services-monitor

jobs:

  tests:
    name: Test the monitor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
      - name: Install Dredd
        run: npm install -g dredd
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'
      - name: Run the application
        run: go run main.go &
      - name: Wait for the server to start
        run: |
          timeout=30
          while ! nc -z localhost 8080; do
            echo "Waiting for server to start..."
            sleep 1
            ((timeout--))
            if [ $timeout -eq 0 ]; then
              echo "Timeout reached, server did not start."
              exit 1
            fi
          done
      - name: Run Dredd to test the API
        run: dredd tests/monitor.apib http://localhost:8080

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
